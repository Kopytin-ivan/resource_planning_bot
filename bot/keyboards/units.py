# bot/keyboards/units.py
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

PAGE_SIZE = 10

def units_keyboard(units: list[dict], page: int, action_prefix: str = "unitload") -> InlineKeyboardMarkup:
    """
    –†–∏—Å—É–µ—Ç —Å–ø–∏—Å–æ–∫ —é–Ω–∏—Ç–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
    units: —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π –æ—Ç GAS: { code: "2.1", label: "(UNIT 2.1) ..." }
    page: 1..N
    action_prefix: –ø—Ä–µ—Ñ–∏–∫—Å callback, –Ω–∞–ø—Ä. "unitload"
    """
    # –≥—Ä–∞–Ω–∏—Ü—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if page < 1:
        page = 1
    start = (page - 1) * PAGE_SIZE
    end = start + PAGE_SIZE

    # —Å—Ç—Ä–æ–∫–∏ —é–Ω–∏—Ç–æ–≤
    rows: list[list[InlineKeyboardButton]] = []
    for u in units[start:end]:
        title = u.get("label") or f"(UNIT {u.get('code')})"
        code = u.get("code")
        rows.append([InlineKeyboardButton(title, callback_data=f"{action_prefix}:pick:{code}")])

    # –Ω–∞–≤–∏–≥–∞—Ü–∏—è
    nav: list[InlineKeyboardButton] = []
    if start > 0:
        nav.append(InlineKeyboardButton("‚Äπ –ù–∞–∑–∞–¥", callback_data=f"{action_prefix}:page:{page-1}"))
    if end < len(units):
        nav.append(InlineKeyboardButton("–î–∞–ª–µ–µ ‚Ä∫", callback_data=f"{action_prefix}:page:{page+1}"))
    if nav:
        rows.append(nav)

    # –∫–Ω–æ–ø–∫–∞ "–¥–æ–º–æ–π"
    rows.append([InlineKeyboardButton("üè† –í –º–µ–Ω—é", callback_data="home")])

    return InlineKeyboardMarkup(inline_keyboard=rows)

__all__ = ["units_keyboard"]
